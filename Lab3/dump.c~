/*********************************
 * dump.c
 *
 * Divides by memory, shows address of and value by types
 *
 * Author: Simon Lee (sijlee) / Brandon Burzon (brburzon)
 * Date Created: 01/29/2016
 * Last Modified by: Simon Lee (sijlee)
 * Date Last Modified: 02/04/2016
 * Assignment: Lab 3
 * Part of: C335
 */

#include <stdio.h>
#include <float.h>

void dump_memory(void *p, int len)
{
  int i;
  //heading tab
  printf("address\t\tchar\thexCh\tshort\tinteger\t\tfloat\t\tdoubleFloatn\n");
  //casting values into...
  for (i = 0; i < len; i++) {
    //when char
    if (*(unsigned char*)(p + i) >= 32 && *(unsigned char *)(p + i) < 127) {
      if (i % 8 == 0)
        printf("%8p\t%02c\t0x%02x\t+%hu\t+%d\t+%e\t+%e\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i), *(unsigned short *)(p + i), *(unsigned int *)(p + i), *(float *) (p + i), *(double *) (p + i));
      //when short
      else if (i % 4 == 0)
        printf("%8p\t%02c\t0x%02x\t+%hu\t+%d\t+%e\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i), *(unsigned short *)(p + i), *(unsigned int *)(p + i), *(float *) (p + i));
      //when int & float
      else if (i % 2 == 0)
        printf("%8p\t%02c\t0x%02x\t+%hu\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i), *(unsigned short *)(p + i));
      else
        printf("%8p\t%02c\t0x%02x\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i));
    }
    else {
      //handling unprintable ascii + misc. values
      if (i % 8 == 0)
        printf("%8p\t ?\t0x%02x\t+%hu\t+%d\t+%e\t+%e\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i), *(unsigned short *)(p + i), *(unsigned int *)(p + i), *(float *) (p + i), *(double *) (p + i));
      else if (i % 4 == 0)
        printf("%8p\t ?\t0x%02x\t+%hu\t+%d\t+%e\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i), *(unsigned short *)(p + i), *(unsigned int *)(p + i), *(float *) (p + i));
      else if (i % 2 == 0)
        printf("%8p\t ?\t0x%02x\t+%hu\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i), *(unsigned short *)(p + i));
      else
        printf("%8p\t ?\t0x%02x\n", p + i, *(unsigned char *)(p + i), *(unsigned char *)(p + i));
    }
  }
}
